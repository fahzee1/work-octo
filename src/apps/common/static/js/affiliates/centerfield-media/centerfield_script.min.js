var clicksnet_jq = jQuery.noConflict(true);

(function ($) {
    var ring_pool_id = 7;
    var cookieName = "rc_sid";
    var cookieDays = 1;
    var subIdParam = "subid";
    var fieldId = "rc_" + ring_pool_id;
    
    var states = [
        { name: "Alabama", abbreviation: "AL" },
        { name: "Alaska", abbreviation: "AK" },
	    { name: "American Samoa", abbreviation: "AS" },
	    { name: "Arizona", abbreviation: "AZ" },
	    { name: "Arkansas", abbreviation: "AR" },
	    { name: "Armed Forces Europe", abbreviation: "AE" },
	    { name: "Armed Forces Pacific", abbreviation: "AP" },
	    { name: "Armed Forces the Americas", abbreviation: "AA" },
	    { name: "California", abbreviation: "CA" },
	    { name: "Colorado", abbreviation: "CO" },
	    { name: "Connecticut", abbreviation: "CT" },
	    { name: "Delaware", abbreviation: "DE" },
	    { name: "District of Columbia", abbreviation: "DC" },
	    { name: "Federated States of Micronesia", abbreviation: "FM" },
	    { name: "Florida", abbreviation: "FL" },
	    { name: "Georgia", abbreviation: "GA" },
	    { name: "Guam", abbreviation: "GU" },
	    { name: "Hawaii", abbreviation: "HI" },
	    { name: "Idaho", abbreviation: "ID" },
	    { name: "Illinois", abbreviation: "IL" },
	    { name: "Indiana", abbreviation: "IN" },
	    { name: "Iowa", abbreviation: "IA" },
	    { name: "Kansas", abbreviation: "KS" },
	    { name: "Kentucky", abbreviation: "KY" },
	    { name: "Louisiana", abbreviation: "LA" },
	    { name: "Maine", abbreviation: "ME" },
	    { name: "Marshall Islands", abbreviation: "MH" },
	    { name: "Maryland", abbreviation: "MD" },
	    { name: "Massachusetts", abbreviation: "MA" },
	    { name: "Michigan", abbreviation: "MI" },
	    { name: "Minnesota", abbreviation: "MN" },
	    { name: "Mississippi", abbreviation: "MS" },
	    { name: "Missouri", abbreviation: "MO" },
	    { name: "Montana", abbreviation: "MT" },
	    { name: "Nebraska", abbreviation: "NE" },
	    { name: "Nevada", abbreviation: "NV" },
	    { name: "New Hampshire", abbreviation: "NH" },
	    { name: "New Jersey", abbreviation: "NJ" },
	    { name: "New Mexico", abbreviation: "NM" },
	    { name: "New York", abbreviation: "NY" },
	    { name: "North Carolina", abbreviation: "NC" },
	    { name: "North Dakota", abbreviation: "ND" },
	    { name: "Northern Mariana Islands", abbreviation: "MP" },
	    { name: "Ohio", abbreviation: "OH" },
	    { name: "Oklahoma", abbreviation: "OK" },
	    { name: "Oregon", abbreviation: "OR" },
	    { name: "Pennsylvania", abbreviation: "PA" },
	    { name: "Puerto Rico", abbreviation: "PR" },
	    { name: "Rhode Island", abbreviation: "RI" },
	    { name: "South Carolina", abbreviation: "SC" },
	    { name: "South Dakota", abbreviation: "SD" },
	    { name: "Tennessee", abbreviation: "TN" },
	    { name: "Texas", abbreviation: "TX" },
	    { name: "Utah", abbreviation: "UT" },
	    { name: "Vermont", abbreviation: "VT" },
	    { name: "Virgin Islands, U.S.", abbreviation: "VI" },
	    { name: "Virginia", abbreviation: "VA" },
	    { name: "Washington", abbreviation: "WA" },
	    { name: "West Virginia", abbreviation: "WV" },
	    { name: "Wisconsin", abbreviation: "WI" },
	    { name: "Wyoming", abbreviation: "WY" }
    ];

    var clicksnet_placeholderFallback = {
        class_name: 'clicksnet_placeholder',

        fFocus: function (o) {
            if (o.val() == o.attr('placeholder')) {
                o.val('')
                    .removeClass(this.class_name);
            }
        },

        fBlur: function (o) {
            if (o.val() == '' || o.val() == o.attr('placeholder')) {
                o.addClass(this.class_name)
                    .val(o.attr('placeholder'));
            }
        },

        fReset: function (o) {
            if (o.val() == o.attr('placeholder')) {
                o.val('');
            }
        },

        onSubmit: function (o) {
            var _this = this;
            $('[placeholder]').parents('form').submit(function () {
                $(this).find('[placeholder]').each(function () {
                    _this.fReset($(this));
                });
            });
        },

        load: function () {
            var _this = this;
            //$(document).ready(function() { 
            $('[placeholder]').focus(function () {
                _this.fFocus($(this));
            }).blur(function () {
                _this.fBlur($(this));
            }).blur();
            _this.onSubmit();
            //}); 
        }
    }
    function refreshConversionPixel() {
        if ($('#checking').val() == 'yes' && $('#employed').val() == 'yes') {
            $('#conversionPixel').val('true');
        } else {
            $('#conversionPixel').val('false');
        }
    }
    $.fn.blink = function (options) {
        var defaults = { delay: 200 };
        var options = $.extend(defaults, options);

        return this.each(function () {

            var obj = $(this);
            var currentTime = 0;

            run_process(obj, currentTime, options.delay);
        });
    }
    function run_process(obj, currentTime, delay) {
        if (currentTime <= 5000) {
            setTimeout(function () {
                if ($(obj).hasClass('blink')) {
                    $(obj).addClass("blinkend");
                    $(obj).removeClass('blink');
                }
                else {
                    $(obj).addClass("blink");
                    $(obj).removeClass("blinkend");
                }
                //$(obj).css('blink',!$(obj).css('blink'));
                currentTime += delay;
                run_process(obj, currentTime, delay);
            }, delay);

        }
        else {
            $(obj).addClass("blinkend");
            $(obj).removeClass('blink');
        }
    }

    //------ begin ring center stuffs
    function getParameterByName(name) {
        name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
        var regexS = "[\\?&]" + name + "=([^&#]*)";
        var regex = new RegExp(regexS);
        var results = regex.exec(window.location.search);
        if (results == null)
            return "";
        else
            return decodeURIComponent(results[1].replace(/\+/g, " "));
    }

    function setCookie(c_name, value, exdays) {
        var exdate = new Date();
        exdate.setDate(exdate.getDate() + exdays);
        var c_value = escape(value) + ((exdays == null) ? "" : "; expires=" + exdate.toUTCString());
        document.cookie = c_name + "=" + c_value + "; path=/";
    }

    function getCookie(c_name) {
        var i, x, y, ARRcookies = document.cookie.split(";");
        for (i = 0; i < ARRcookies.length; i++) {
            x = ARRcookies[i].substr(0, ARRcookies[i].indexOf("="));
            y = ARRcookies[i].substr(ARRcookies[i].indexOf("=") + 1);
            x = x.replace(/^\s+|\s+$/g, "");
            if (x == c_name) {
                return unescape(y);
            }
        }

        return "";
    }

    function getSubId() {
        var result = getParameterByName(subIdParam);

        if (result != null && result != "") {
            setCookie(cookieName, result, cookieDays);
            return result;
        }
        else
            return getCookie(cookieName)
    }

    function getPhoneNumber(callback) {
        var target = '';
        var retVal, modeNote, dL = document.location.hostname;

        target = '//cfringctr.com/api/reserve/' + ring_pool_id + '/'.concat("?subid=", getSubId(), "&typeid=1");

        var isIE = /*@cc_on!@*/!1;

        if (isIE) {
            if (window.XDomainRequest) {
                var xdr = new XDomainRequest();
                if (xdr) {
                    xdr.onload = function () {
                        callback($.parseJSON(xdr.responseText).number);
                    };
                    xdr.open("get", target);
                    xdr.onprogress = function () { };
                    xdr.onerror = function () { };
                    xdr.ontimeout = function () { };
                    xdr.timeout = 0;
                    xdr.send();
                }
            }
        }
        else {
            var xmlhttp = new XMLHttpRequest();

            xmlhttp.onreadystatechange = function () {
                if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
                    callback($.parseJSON(xmlhttp.responseText).number);
                }
            };
            xmlhttp.open("GET", target, true);
            xmlhttp.send();
        }
    }
    function decodeHtml(str) {
        str = str.replace(/\&#8203;/g, '');

        return $('<div/>').html(str).text();
    }
    function generate_click_to_call(data) {
        var number_string = decodeHtml(data);
        var click_call = number_string.replace(/\D/g, '');

        return '<a href="tel:' + click_call + '">' + number_string + '</a>';
    }
    //------ end ring center stuffs

    $.fn.c2Selectbox = function (action) {
        var c2_animation_speed = 100;

        if ($.browser.msie && $.browser.version.substr(0, 1) == '6') {
            return false;
        }

        if (typeof action == 'undefined') {
            $(this).each(function () {
                if ($(this).find('option').length > 0) {
                    if (!$(this).hasClass('c2-sb-enabled')) {
                        $(this).addClass('c2-sb-enabled');

                        var original_select = $(this);
                        var html = '<div class="c2-sb-inner-wrap"><div class="c2-sb-text"></div><span class="c2-sb-button">Arrow</span></div><div class="c2-sb-list-wrap"><ul class="c2-sb-list"></ul></div>';
                        var selectbox = $('<div class="c2-sb-wrap"></div>');
                        selectbox.append(html);
                        var first_option = $(this).find('option:eq(0)');
                        var found_value = false;
                        $(this).find('optgroup, option').each(function (index) {
                            if ($(this).is('option')) {
                                if ($(this).is(':selected')) { // only FF reports checked for the first option if none is actually checked
                                    $(selectbox).find('.c2-sb-text').text($(this).text());
                                    found_value = true;
                                }
                                $(selectbox).find('.c2-sb-list').append('<li class="c2-sb-list-item"><a href="#" class="c2-sb-list-item-link ' + (($(this).is(':selected')) ? 'c2-sb-list-item-link-active' : '') + ' " data-value="' + $(this).val() + '">' + $(this).text() + '</a></li>');
                            } else if ($(this).is('optgroup')) {
                                $(selectbox).find('.c2-sb-list').append('<li class="c2-sb-list-item"><a href="#" class="c2-sb-list-item-group">' + $(this).attr('label') + '</a></li>');
                            }
                        });
                        if (!found_value) {
                            $(selectbox).find('.c2-sb-text').text($(first_option).text());
                            $(selectbox).find('.c2-sb-list-item-link[data-value="' + $(first_option).val() + '"]').addClass('c2-sb-list-item-link-active');
                            found_value = true;
                        }

                        var width = $(this).width() + parseInt($(this).css('padding-left')) + parseInt($(this).css('padding-right')) + parseInt($(this).css('border-left-width')) + parseInt($(this).css('border-right-width'));
                        $(original_select).hide().after(selectbox);

                        var padding = parseInt($(selectbox).find('.c2-sb-inner-wrap').css('padding-left')) + parseInt($(selectbox).find('.c2-sb-inner-wrap').css('padding-right'));
                        var button_width = parseInt($(selectbox).find('.c2-sb-button').css('width')) + parseInt($(selectbox).find('.c2-sb-button').css('padding-left')) + parseInt($(selectbox).find('.c2-sb-button').css('padding-right')) + parseInt($(selectbox).find('.c2-sb-button').css('margin-left')) + parseInt($(selectbox).find('.c2-sb-button').css('margin-right'));
                        $(selectbox).find('.c2-sb-text').width(width - padding - button_width);
                        list_width = $(selectbox).width() - parseInt($(selectbox).find('.c2-sb-list-wrap').css('border-left-width')) - parseInt($(selectbox).find('.c2-sb-list-wrap').css('border-right-width'));
                        $(selectbox).find('.c2-sb-list-wrap').css('min-width', list_width);

                        $(selectbox).find('.c2-sb-text, .c2-sb-button').click(function () {
                            var sb = $(this).closest('.c2-sb-wrap');
                            var list = $(sb).find('.c2-sb-list-wrap');
                            $('.c2-sb-wrap').not(sb).c2Selectbox('close');
                            $(list).stop(true, true);
                            if (!$(list).is(':visible')) {
                                $(sb).addClass('c2-sb-open');
                            } else {
                                $(sb).removeClass('c2-sb-open').addClass('c2-sb-closing');
                            }
                            $(list).slideToggle(c2_animation_speed, function () {
                                if (!$(list).is(':visible')) {
                                    $(sb).removeClass('c2-sb-closing');
                                }
                            });
                            return false;
                        });

                        if ($.browser.msie && $.browser.version.substr(0, 1) == '7') {
                            $(selectbox).find('.c2-sb-list-wrap').css({
                                'display': 'block',
                                'visbility': 'hidden'
                            });
                            setTimeout(function () {
                                $(selectbox).find('.c2-sb-list-item-link').width($(selectbox).find('.c2-sb-list-wrap').width());
                                $(selectbox).find('.c2-sb-list-wrap').css({
                                    'display': 'none',
                                    'visbility': 'visible'
                                });
                            }, 1);
                        }

                        $(selectbox).find('.c2-sb-list-item-link').click(function () {
                            $(this).closest('.c2-sb-list-wrap').find('.c2-sb-list-item-link').removeClass('c2-sb-list-item-link-active');
                            $(this).addClass('c2-sb-list-item-link-active');
                            $(this).closest('.c2-sb-wrap').find('.c2-sb-text').text($(this).text());
                            $(original_select).val($(this).attr('data-value')).change();
                            $(selectbox).c2Selectbox('close');
                            return false;
                        });
                        $(selectbox).find('.c2-sb-list-item-group').click(function () {
                            return false;
                        });
                    }
                }
            });

            $('body').click(function (e) {
                if (!$(e.target).is('.c2-sb-wrap *')) {
                    $('.c2-sb-wrap').c2Selectbox('close');
                }
                return true;
            });
        } else {
            if (action == 'close') {
                $(this).each(function () {
                    var targets = [];
                    if ($(this).is('.c2-sb-wrap')) {
                        targets.push($(this));
                    } else {
                        $(this).find('.c2-sb-wrap').each(function () {
                            targets.push($(this));
                        });
                    }
                    for (var i = 0; i < targets.length; i++) {
                        var t = targets[i]
                        if ($(t).find('.c2-sb-list-wrap').is(':visible')) {
                            $(t).removeClass('c2-sb-open');
                            $(t).addClass('c2-sb-closing');
                            $(t).find('.c2-sb-list-wrap').stop(true, true).slideUp(c2_animation_speed, function () {
                                $(this).closest('.c2-sb-wrap').removeClass('c2-sb-closing');
                            });
                        }
                    };
                });
            }
        }
    };

    //------ begin countdown script
    $.fn.countDown = function (options) {

        config = {};

        $.extend(config, options);

        diffSecs = this.setCountDown(config);

        $('#' + $(this).attr('id') + ' .digit').html('<div class="top"></div><div class="bottom"></div>');
        $(this).doCountDown($(this).attr('id'), diffSecs, 500);

        if (config.onComplete) {
            $.data($(this)[0], 'callback', config.onComplete);
        }
        if (config.omitWeeks) {
            $.data($(this)[0], 'omitWeeks', config.omitWeeks);
        }
        return this;

    };

    $.fn.stopCountDown = function () {
        clearTimeout($.data(this[0], 'timer'));
    };

    $.fn.startCountDown = function () {
        this.doCountDown($(this).attr('id'), $.data(this[0], 'diffSecs'), 500);
    };

    $.fn.setCountDown = function (options) {
        var targetTime = new Date();

        if (options.targetDate) {
            targetTime.setDate(options.targetDate.day);
            targetTime.setMonth(options.targetDate.month - 1);
            targetTime.setFullYear(options.targetDate.year);
            targetTime.setHours(options.targetDate.hour);
            targetTime.setMinutes(options.targetDate.min);
            targetTime.setSeconds(options.targetDate.sec);
        }
        else if (options.targetOffset) {
            targetTime.setDate(options.targetOffset.day + targetTime.getDate());
            targetTime.setMonth(options.targetOffset.month + targetTime.getMonth());
            targetTime.setFullYear(options.targetOffset.year + targetTime.getFullYear());
            targetTime.setHours(options.targetOffset.hour + targetTime.getHours());
            targetTime.setMinutes(options.targetOffset.min + targetTime.getMinutes());
            targetTime.setSeconds(options.targetOffset.sec + targetTime.getSeconds());
        }

        var nowTime = new Date();

        diffSecs = Math.floor((targetTime.valueOf() - nowTime.valueOf()) / 1000);

        $.data(this[0], 'diffSecs', diffSecs);

        return diffSecs;
    };

    $.fn.doCountDown = function (id, diffSecs, duration) {
        $this = $('#' + id);
        if (diffSecs <= 0) {
            diffSecs = 0;
            if ($.data($this[0], 'timer')) {
                clearTimeout($.data($this[0], 'timer'));
            }
        }

        secs = diffSecs % 60;
        mins = Math.floor(diffSecs / 60) % 60;
        hours = Math.floor(diffSecs / 60 / 60) % 24;
        if ($.data($this[0], 'omitWeeks') == true) {
            days = Math.floor(diffSecs / 60 / 60 / 24);
            weeks = Math.floor(diffSecs / 60 / 60 / 24 / 7);
        }
        else {
            days = Math.floor(diffSecs / 60 / 60 / 24) % 7;
            weeks = Math.floor(diffSecs / 60 / 60 / 24 / 7);
        }

        $this.dashChangeTo(id, 'seconds_dash', secs, duration ? duration : 800);
        $this.dashChangeTo(id, 'minutes_dash', mins, duration ? duration : 1200);
        $this.dashChangeTo(id, 'hours_dash', hours, duration ? duration : 1200);
        $this.dashChangeTo(id, 'days_dash', days, duration ? duration : 1200);
        $this.dashChangeTo(id, 'weeks_dash', weeks, duration ? duration : 1200);

        $.data($this[0], 'diffSecs', diffSecs);
        if (diffSecs > 0) {
            e = $this;
            t = setTimeout(function () { e.doCountDown(id, diffSecs - 1) }, 1000);
            $.data(e[0], 'timer', t);
        }
        else if (cb = $.data($this[0], 'callback')) {
            $.data($this[0], 'callback')();
        }

    };

    $.fn.dashChangeTo = function (id, dash, n, duration) {
        $this = $('#' + id);
        d2 = n % 10;
        d1 = (n - n % 10) / 10

        if ($('#' + $this.attr('id') + ' .' + dash)) {
            $this.digitChangeTo('#' + $this.attr('id') + ' .' + dash + ' .digit:first', d1, duration);
            $this.digitChangeTo('#' + $this.attr('id') + ' .' + dash + ' .digit:last', d2, duration);
        }
    };

    $.fn.digitChangeTo = function (digit, n, duration) {
        if (!duration) {
            duration = 800;
        }
        if ($(digit + ' div.top').html() != n + '') {

            $(digit + ' div.top').css({ 'display': 'none' });
            $(digit + ' div.top').html((n ? n : '0')).slideDown(duration);

            $(digit + ' div.bottom').animate({ 'height': '' }, duration, function () {
                $(digit + ' div.bottom').html($(digit + ' div.top').html());
                $(digit + ' div.bottom').css({ 'display': 'block', 'height': '' });
                $(digit + ' div.top').hide().slideUp(10);


            });
        }
    };
    //------ end countdown script

    function clicksnet_callback() {
        clicksnet_placeholderFallback.load();

        $(document).on('focusin', '.field, textarea', function () {
            if (this.title == this.value) {
                this.value = '';
            }
        }).on('focusout', '.field, textarea', function () {
            if (this.value == '') {
                this.value = this.title;
            }
        });

        $('select').c2Selectbox();

        if ($('#countdown_dashboard').length > 0) {
            $('#countdown_dashboard').countDown({
                targetDate: {
                    'day': 31,
                    'month': 12,
                    'year': 2119,
                    'hour': 23,
                    'min': 0,
                    'sec': 0
                }
            });
        }

        $('#checking').bind('change', function () {
            refreshConversionPixel();
        });
        $('#employed').bind('change', function () {
            refreshConversionPixel();
        });
        if (getCookie(fieldId + '_offer') == '') {
            getPhoneNumber(function (response) {
                if (response != '') {
                    // Store the number for later use
                    setCookie(fieldId + '_offer', response, null);

                    // Display the offer number
                    $('.rc_phone').html(generate_click_to_call(response));
                }
                $('.blink').blink();
            });
        }
        else {
            // Display the offer number
            if (getCookie(fieldId + '_offer') != '') {
                $('.rc_phone').html(generate_click_to_call(getCookie(fieldId + '_offer')));
            }
            $('.blink').blink();
        }

        if ($('#top-bar').length) {
            var callBox;
            if ($('.call-form').length > 0) {
                callBox = $('.call-form').offset().top;
            } else if ($('.call-box').length > 0) {
                callBox = $('.call-box').offset().top;
            }

            window.onscroll = function () {
                var scrollTop = $(window).scrollTop();
                if (scrollTop > callBox) {
                    $('#top-bar').css('top', 0);
                } else {
                    $("#top-bar").css('top', -110);
                }
            };
        }
        
        var state_code = getParameterByName('state_code');
        var selectedState = clicksnet_jq.grep(states, function(obj) {
            return obj.abbreviation === state_code;
        });
        
        if (selectedState.length > 0) {
            $('.flag').attr('class', 'flag ' + selectedState[0].abbreviation);
            $('.state-name').text(selectedState[0].name + ' residents');
            
            //if (selectedState[0].name.length > 9) {
            //  $('.state-name').addClass('small');
            //}
            
            $('body').append('<span id="measure_width" style="position:fixed;top:-10000px;font-family:arvobold, sans-serif;font-size:60px;">' + selectedState[0].name + '</span>');
            
            if ($('#measure_width').width() > 325) {
                $('.state-name').addClass('small');
            }
            
            var selected;
            $('.c2-sb-list-item').each(function() { if ($(this).text() == selectedState[0].abbreviation) { selected = $(this).children('.c2-sb-list-item-link'); } })
            
            $(selected).closest('.c2-sb-list-wrap').find('.c2-sb-list-item-link').removeClass('c2-sb-list-item-link-active');
            $(selected).addClass('c2-sb-list-item-link-active');
            $(selected).closest('.c2-sb-wrap').find('.c2-sb-text').text($(selected).text());
            $('#State').val($(selected).attr('data-value')).change();
        } else {
            $('.flag').attr('class', 'flag default');
            $('.state-name').text('Welcome  borrowers');
        }
    }
    clicksnet_jq.cf_callback = clicksnet_callback;
})(clicksnet_jq);
clicksnet_jq.cf_callback();